// <auto-generated />
using System;
using MiMangaBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiMangaBot.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250619161232_InitialMigrationForProjectStart")]
    partial class InitialMigrationForProjectStart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MiMangaBot.Domain.Entities.Manga", b =>
                {
                    b.Property<string>("MangadexId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mangadex_id");

                    b.Property<string>("AlternativeTitles")
                        .HasColumnType("longtext")
                        .HasColumnName("alternative_titles");

                    b.Property<string>("Artists")
                        .HasColumnType("longtext")
                        .HasColumnName("artists");

                    b.Property<string>("Author")
                        .HasColumnType("longtext")
                        .HasColumnName("authors");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("cover_image_url");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Genre")
                        .HasColumnType("longtext")
                        .HasColumnName("genres_tags");

                    b.Property<string>("OriginalLanguage")
                        .HasColumnType("longtext")
                        .HasColumnName("original_language");

                    b.Property<int?>("PublicationYear")
                        .HasColumnType("int")
                        .HasColumnName("publication_year");

                    b.Property<string>("SourceApi")
                        .HasColumnType("longtext")
                        .HasColumnName("source_api");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title_main");

                    b.Property<int?>("TotalChaptersOnMangadex")
                        .HasColumnType("int")
                        .HasColumnName("total_chapters_on_mangadex");

                    b.HasKey("MangadexId");

                    b.ToTable("mangas", (string)null);
                });

            modelBuilder.Entity("MiMangaBot.Domain.Entities.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MangadexId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name_Customer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MangadexId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("MiMangaBot.Domain.Entities.Prestamo", b =>
                {
                    b.HasOne("MiMangaBot.Domain.Entities.Manga", "Manga")
                        .WithMany()
                        .HasForeignKey("MangadexId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manga");
                });
#pragma warning restore 612, 618
        }
    }
}
