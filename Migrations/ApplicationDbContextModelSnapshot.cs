// <auto-generated />
using System;
using MiMangaBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiMangaBot.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MiMangaBot.Domain.Entities.Manga", b =>
                {
                    b.Property<int>("MangaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MangaId");

                    b.Property<string>("Autor")
                        .HasColumnType("longtext")
                        .HasColumnName("Autor");

                    b.Property<DateTime?>("Fecha_Emision")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Fecha_Emision");

                    b.Property<DateTime?>("Fecha_Publicacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Fecha_Publicacion");

                    b.Property<string>("Name_Main")
                        .HasColumnType("longtext")
                        .HasColumnName("Name_Main");

                    b.HasKey("MangaId");

                    b.ToTable("mangas", (string)null);
                });

            modelBuilder.Entity("MiMangaBot.Domain.Entities.Prestamo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("LoanDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LoanDate");

                    b.Property<int?>("MangaId")
                        .HasColumnType("int")
                        .HasColumnName("MangaId");

                    b.Property<string>("Name_Customer")
                        .HasColumnType("longtext")
                        .HasColumnName("Name_Customer");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ReturnDate");

                    b.HasKey("ID");

                    b.HasIndex("MangaId");

                    b.ToTable("prestamos", (string)null);
                });

            modelBuilder.Entity("MiMangaBot.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MiMangaBot.Domain.Entities.Prestamo", b =>
                {
                    b.HasOne("MiMangaBot.Domain.Entities.Manga", "Manga")
                        .WithMany()
                        .HasForeignKey("MangaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manga");
                });
#pragma warning restore 612, 618
        }
    }
}
